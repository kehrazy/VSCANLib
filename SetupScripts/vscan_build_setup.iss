; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "CAN Library"
#define MyAppVersion "1.0.0"
#define MyAppPublisher "АО НТЦ МОДУЛЬ"
#define MyAppURL "http://www.module.ru/"

[Setup]
; NOTE: The value of AppId uniquely identifies this application.
; Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{3AE78376-C173-4AA1-A387-2C6A4595A463}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
;AppVerName={#MyAppName} {#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}

; Определяет папку, в которую инсталятор предложит установить программу по умолчанию
DefaultDirName={code:GetDefRoot}\Lib\site-packages\RC_Module\

;запрещает пользователю выбирать папку для установки обновления – страница Выбор папки назначения отображаться не будет
DisableDirPage=yes

;Разрешить пользователю изменять имя папки меню Пуск
DisableProgramGroupPage=yes

; Не создавать папку приложения
; CreateAppDir=no

;деинсталлятор создаваться не будет
Uninstallable=no

; Папка, в которой будут создаваться файлы установки относительно папки скрипта.
OutputDir=../Build

; Следующая строка задает базовое имя для получаемого файла установки
OutputBaseFilename=vscan_setup

; Сжатие
Compression=lzma
SolidCompression=yes

; Иконка установщика
SetupIconFile=satellite.ico

; Логотипы
WizardImageFile=logo_big.bmp
WizardSmallImageFile=logo.bmp

[Code]
//
// Функция возвращает ключ для реестра
//
function GetHKLM: Integer;
begin
  if IsWin64 then
    Result := HKLM64
  else
    Result := HKLM32;
end;

//
// Функция возвращает путь установки питона
//
function GetDefRoot(Param: String): String;
var Path: String;
begin
    if RegQueryStringValue(GetHKLM, 'SOFTWARE\Wow6432Node\Python\PythonCore\3.9\InstallPath', '',Path) then
        Result := Path
    else begin
        if RegQueryStringValue(GetHKLM, 'SOFTWARE\Python\PythonCore\3.9\InstallPath', '',Path) then
            Result := Path
        else begin
            MsgBox('Python 3.9 не найден на данном компьютере. Сначала установите Python 3.9', mbInformation, MB_OK);
            abort();
        end;
    end;
end;

//
// Функция возвращает путь в реестре до PythonPath
//
function FindRegeditEntry(Param: String): String;
var Path: String;
begin
    if RegQueryStringValue(GetHKLM, 'SOFTWARE\Wow6432Node\Python\PythonCore\3.9\PythonPath', '',Path) then
        Result := 'SOFTWARE\Wow6432Node\Python\PythonCore\3.9\PythonPath'
    else begin
        if RegQueryStringValue(GetHKLM, 'SOFTWARE\Python\PythonCore\3.9\PythonPath', '',Path) then
            Result := 'SOFTWARE\Python\PythonCore\3.9\PythonPath'
        else begin
            MsgBox('Python 3.9 не найден на данном компьютере. Сначала установите Python 3.9', mbInformation, MB_OK);
            abort();
        end;
    end;
end;

// True - если нашли требуемое
function FindSubstring(_find: String; _str: String): Boolean;
var
    is_tmp: String;
    tmp_pos: Integer;
begin
    tmp_pos := pos(_find, _str)

    if tmp_pos = 0 then
        Result:= False
    else
    begin
        tmp_pos := tmp_pos + Length(_find);

        // если конец строки
        if tmp_pos > Length(_str) then
            Result := True
        // если не конец строки
        else
        begin
            // если последний символ ;
            if _str[tmp_pos] = ';' then
                Result := True
            // если это не конец строки и не ";"
            else
            begin
                // обрезаем _str
                _str := Copy(_str, tmp_pos, Length(_str) - tmp_pos + 1)

                // и ищем дальше
                Result := FindSubstring(_find, _str);
            end;
        end;
    end;
end;

//
// Функция добавляет путь к библиотеке
//
function AddLibraryPath(Param: String): String;
var tmp_str: String;
begin
    if Param = '' then
        // Если в реестре ещё совсем ничего не прописано, то мы будем первыми
        Result := ExpandConstant('{app}')
    else
    begin
        if FindSubstring(ExpandConstant('{app}'), Param) then
            // Путь к либе уже прописан, не будем трогать реестр
            Result := Param
        else
        begin
            if Param[length(Param)] = ';' then
                tmp_str := ''
            else
                tmp_str := ';';

            Result := Param + tmp_str + ExpandConstant('{app}');
        end
    end;
end;

[Registry]
Root: HKLM; Subkey: "{code:FindRegeditEntry}\RC_MODULE"; ValueType: string; ValueName: ""; ValueData: "{code:AddLibraryPath|{olddata}}";

[Languages]
Name: "russian"; MessagesFile: "compiler:Languages\Russian.isl"

[Files]
Source: "../*"; DestDir: "{app}\vs_can_lib"; Excludes: ".git, .idea, .pyc .vscode, build, __pycache__, dist, *egg-info"; Flags: ignoreversion recursesubdirs createallsubdirs
; NOTE: Don't use "Flags: ignoreversion" on any shared system files

[Run]
Filename: "cmd.exe"; Parameters: "/c echo RC_Module/vs_can_lib > ""{app}\..\vs_can_lib.pth"" && echo RC_Module/ >> ""{app}\..\vs_can_lib.pth"""; StatusMsg: "Добавление pth-файла библиотеки. Шаг 1 из 1";



